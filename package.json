{
  "name": "niagara",
  "version": "3.2.0",
  "description": "asynchronous map and filter while keeping a given concurrency limit",
  "main": "index.js",
  "scripts": {
    "pretest": "node_modules/.bin/jshint .",
    "test": "node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/m90/niagara.git"
  },
  "testling": {
    "harness": "mocha-bdd",
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "chrome/latest",
      "firefox/latest",
      "safari/latest",
      "opera/latest"
    ]
  },
  "keywords": [
    "promise",
    "async",
    "concurrent",
    "queue",
    "throttle"
  ],
  "author": "Frederik Ring <frederik.ring@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/m90/niagara/issues"
  },
  "homepage": "https://github.com/m90/niagara#readme",
  "devDependencies": {
    "jshint": "^2.8.0",
    "mocha": "^2.2.5",
    "promise": "^7.0.3",
    "underscore": "^1.8.3"
  }
}
